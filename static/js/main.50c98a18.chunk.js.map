{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWhole","App","state","users","newTitle","newUser","titleWarning","userWarning","getId","maxId","verifyInput","setState","handleClick","event","preventDefault","newTodo","oldState","handleChange","target","value","this","action","method","type","placeholder","onChange","disabled","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50c98a18.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article data-id={id} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{ title }</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosWhole: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App1 = () => {\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input type=\"text\" data-cy=\"titleInput\" />\n          <span className=\"error\">Please enter a title</span>\n        </div>\n\n        <div className=\"field\">\n          <select data-cy=\"userSelect\">\n            <option value=\"0\" disabled>Choose a user</option>\n          </select>\n\n          <span className=\"error\">Please choose a user</span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n      </section>\n    </div>\n  );\n};\n\ntype State = {\n  todos: Todo[],\n  users: User[],\n  newTitle: string,\n  newUser: string,\n  titleWarning: boolean,\n  userWarning: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    todos: todosWhole,\n    users: usersFromServer,\n    newTitle: '',\n    newUser: '0',\n    titleWarning: false,\n    userWarning: false,\n  };\n\n  getId = () => {\n    let maxId = 0;\n\n    this.state.todos.map(todo => {\n      if (maxId < todo.id) {\n        maxId = todo.id;\n      }\n\n      return todo;\n    });\n\n    return maxId + 1;\n  };\n\n  verifyInput = () => {\n    if (this.state.newTitle === '') {\n      this.setState({ titleWarning: true });\n\n      return false;\n    }\n\n    if (this.state.newUser === '0') {\n      this.setState({ userWarning: true });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // console.log(this.state);\n    event.preventDefault();\n\n    if (!this.verifyInput()) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: this.getId(),\n      title: this.state.newTitle,\n      completed: false,\n      userId: +this.state.newUser,\n      user: getUser(+this.state.newUser),\n    };\n\n    this.setState(oldState => ({\n      ...oldState,\n      todos: [...oldState.todos, newTodo],\n      newTitle: '',\n      newUser: '0',\n    }));\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    if (name === 'newTitle') {\n      this.setState(oldState => ({\n        ...oldState,\n        newTitle: value,\n      }));\n    } else if (name === 'newUser') {\n      this.setState(oldState => ({\n        ...oldState,\n        newUser: value,\n      }));\n    }\n\n    this.setState({ titleWarning: false });\n    this.setState({ userWarning: false });\n  };\n\n  render() {\n    const {\n      todos,\n      users,\n      titleWarning,\n      userWarning,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form action=\"/api/users\" method=\"POST\">\n          <div className=\"field\">\n            <label>\n              Title:\n              <input\n                name=\"newTitle\"\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={this.state.newTitle}\n                onChange={this.handleChange}\n              />\n            </label>\n            {titleWarning\n              && <span className=\"error\">Please enter a title</span>}\n          </div>\n\n          <div className=\"field\">\n            <label>\n              User:\n              <select\n                name=\"newUser\"\n                data-cy=\"userSelect\"\n                value={this.state.newUser}\n                onChange={this.handleChange}\n              >\n                <option value=\"0\" disabled>Choose a user</option>\n                {users.map(user => (\n                  <option value={user.id}>{user.name}</option>\n                ))}\n              </select>\n            </label>\n\n            {userWarning && <span className=\"error\">Please choose a user</span>}\n          </div>\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            onClick={this.handleClick}\n          >\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}